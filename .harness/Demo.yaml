pipeline:
  name: Demo
  identifier: Demo
  projectIdentifier: Devopsnow
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.Github_OAuth_1741324575330
        repoName: Shashank78351/maven
        build: <+input>
  stages:
    - stage:
        name: Sonarqube
        identifier: Sonarqube
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          execution:
            steps:
              - step:
                  type: Sonarqube
                  name: Sonarqube_1
                  identifier: Sonarqube_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
                    auth:
                      access_token: sqp_180e2bf02583dbe4d96a145c05ff3d2a4ee44dca
                      domain: http://devopsfreeuse.eastus.cloudapp.azure.com:9000/
                      ssl: true
                    tool:
                      project_key: maven
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: AKS
              namespace: maven-app
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
    - stage:
        name: Build
        identifier: Build
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: AKS
              namespace: maven-app
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: docker
                    repo: smr1234/maven
                    tags:
                      - latest
                    caching: true
    - stage:
        name: Trivy scan
        identifier: test
        description: ""
        type: CI
        spec:
          cloneCodebase: false
          infrastructure:
            type: KubernetesDirect
            spec:
              connectorRef: AKS
              namespace: maven-app
              automountServiceAccountToken: true
              nodeSelector: {}
              os: Linux
          execution:
            steps:
              - step:
                  type: AquaTrivy
                  name: AquaTrivy_1
                  identifier: AquaTrivy_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                      args:
                        cli: "--scanners vuln"
                    privileged: true
                    imagePullPolicy: Always
                    connectorRef: docker
                    imageTag: latest
                    image:
                      type: docker_v2
                      tag: latest
                      name: smr1234/maven
          caching:
            enabled: false
            paths: []
          buildIntelligence:
            enabled: false
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: Kubernetes
          service:
            serviceRef: AKS_sevice
            serviceInputs:
              serviceDefinition:
                type: Kubernetes
                spec:
                  artifacts:
                    primary:
                      primaryArtifactRef: <+input>
                      sources: <+input>
          environment:
            environmentRef: dev
            deployToAll: false
            infrastructureDefinitions:
              - identifier: AKS_Linux
          execution:
            steps:
              - step:
                  name: Rollout Deployment
                  identifier: rolloutDeployment
                  type: K8sRollingDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
                    pruningEnabled: false
            rollbackSteps:
              - step:
                  name: Rollback Rollout Deployment
                  identifier: rollbackRolloutDeployment
                  type: K8sRollingRollback
                  timeout: 10m
                  spec:
                    pruningEnabled: false
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
